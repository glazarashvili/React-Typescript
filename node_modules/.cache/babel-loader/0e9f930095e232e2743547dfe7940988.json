{"ast":null,"code":"var _jsxFileName = \"/home/george/Desktop/07-react-ts-starting-project/src/componenets/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = () => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["/home/george/Desktop/07-react-ts-starting-project/src/componenets/NewTodo.tsx"],"names":["React","useRef","NewTodo","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,gBAAgB,GAAGF,MAAM,CAAmB,IAAnB,CAA/B;;AACA,QAAMG,aAAa,GAAIC,KAAD,IAA4B;AAChDA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C;;AAEA,QAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnC;AACD;AACF,GAPD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEP,aAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,GAAG,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;GAAMD,O;;KAAAA,O;AAoBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nimport { useRef } from 'react'\n\nconst NewTodo = () => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null)\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault()\n    const enteredText = todoTextInputRef.current!.value\n\n    if (enteredText.trim().length === 0) {\n      return\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <label htmlFor='text'>Todo Text</label>\n      <input type='text' id='text' ref={todoTextInputRef} />\n      <button type='submit'>Add Todo</button>\n    </form>\n  )\n}\n\nexport default NewTodo\n"]},"metadata":{},"sourceType":"module"}